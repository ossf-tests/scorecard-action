name: scorecard-head
on:
  workflow_dispatch:
  # Only the default branch is supported.
  branch_protection_rule:
  schedule:
    - cron: '0 2 * * *'

# Declare default permissions as read only.

jobs:
  scorecard-head:
    name: Scorecard HEAD
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      actions: read
      contents: read
      id-token: write # needed for keyless signing
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        results_format: [sarif, json]
        publish_results: [false, true]
        token: [ GITHUB_TOKEN, SCORECARD_READ_TOKEN ]
        include:
          - results_format: sarif
            upload_result: true
          - results_format: json
            upload_result: false
    steps:
      - name: "Checkout code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: "Run analysis"
        id: scorecard-run
        uses: docker://ghcr.io/ossf/scorecard-action:latest
        with:
          entrypoint: "/scorecard-action"
          results_file: results.${{ matrix.results_format }}
          results_format: ${{ matrix.results_format }}
          # Read-only PAT token. To create it,
          # follow the steps in https://github.com/ossf/scorecard-action#pat-token-creation.
          repo_token: ${{ secrets[matrix.token] }}
          internal_default_token: ${{ secrets.GITHUB_TOKEN }}
          # Publish the results to enable scorecard badges. For more details, see
          # https://github.com/ossf/scorecard-action#publishing-results.
          # For private repositories, `publish_results` will automatically be set to `false`,
          # regardless of the value entered here.
          publish_results: ${{ matrix.publish_results }}
          internal_publish_base_url: "https://api-staging.scorecard.dev"
      # Upload the results as artifacts (optional).
      - name: "Upload artifact"
        if: steps.scorecard-run.outcome == 'success'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: ${{ join(matrix.*, '-') }} # name needs to be unique across matrix runs
          path: results.${{ matrix.results_format }}
          retention-days: 5
      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        if: matrix.upload_result == true && steps.scorecard-run.outcome == 'success'
        uses: github/codeql-action/upload-sarif@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          sarif_file: results.sarif
  report-failure:
    needs: scorecard-head
    runs-on: ubuntu-latest
    if: always() && needs.scorecard-head.result != 'success'
    steps:
      - name: "Report Scorecard run failure"
        env:
          ISSUE_BODY: |
            Repo: https://github.com/${{ github.repository }}/tree/${{ github.ref_name }}
            Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Workflow name: ${{ github.workflow }}
            Workflow file: https://github.com/${{ github.repository }}/tree/main/.github/workflows/scorecards-head.yml
            Trigger: ${{ github.event_name }}
            Branch: ${{ github.ref_name }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.SCORECARD_READ_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: "ossf",
              repo: "scorecard-action",
              title: "Failing e2e tests - scorecard-head on ${{ github.repository }}",
              body: process.env.ISSUE_BODY,
              labels: ["e2e", "automated-tests"]
            });
