name: scorecard-latest-release
on:
  workflow_dispatch:
  # Only the default branch is supported.
  branch_protection_rule:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [ main ]

# Declare default permissions as read only.
permissions: read-all

jobs:
  scorecard-latest-release:
    name: Scorecard latest release
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # actions: read
      # contents: read
      id-token: write

    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        results_format: [sarif, json, default]
        publish_results: [false, true]
        token: [GITHUB_TOKEN, SCORECARD_READ_TOKEN]
        include:
          - results_format: sarif
            upload_result: true
          - results_format: json
            upload_result: false
          - results_format: default
            upload_result: false

    steps:
      - name: "Checkout code"
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          persist-credentials: false

      - name: "Run Scorecard analysis"
        id: scorecard-run
        uses: ossf/scorecard-action@main
        with:
          results_file: results.${{ matrix.results_format }}
          results_format: ${{ matrix.results_format }}
          # Read-only PAT token. To create it,
          # follow the steps in https://github.com/ossf/scorecard-action#pat-token-creation.
          repo_token: ${{ secrets[matrix.token] }}
          # Publish the results to enable scorecard badges. For more details, see
          # https://github.com/ossf/scorecard-action#publishing-results.
          # For private repositories, `publish_results` will automatically be set to `false`,
          # regardless of the value entered here.
          publish_results: ${{ matrix.publish_results }}
          internal_publish_base_url: "https://api-staging.securityscorecards.dev"

      # Upload the results as artifacts (optional).
      - name: "Upload artifact"
        if: steps.scorecard-run.outcome == 'success'
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
        with:
          name: ${{ matrix.results_format }} file
          path: results.${{ matrix.results_format }}
          retention-days: 5

      # Upload the results to GitHub's code scanning dashboard.
      - name: "Upload to code-scanning"
        if: matrix.upload_result == true && steps.scorecard-run.outcome == 'success'
        uses: github/codeql-action/upload-sarif@807578363a7869ca324a79039e6db9c843e0e100 # v2.1.27
        with:
          sarif_file: results.sarif

  report-failure:
    needs: scorecard-latest-release
    runs-on: ubuntu-latest
    if: always() && needs.scorecard-latest-release.result != 'success'

    steps:
      - name: "Report Scorecard run failure"
        uses: actions-ecosystem/action-create-issue@b02a3c1d9d929a5839315bd255e40389f0dab627 #v1
        with:
          github_token: ${{ secrets.SCORECARD_READ_TOKEN }}
          title: "Failing e2e tests - scorecard-latest-release on ${{ github.repository }}"
          body: |
            Matrix: ${{ toJSON(matrix) }}
            Repo: https://github.com/${{ github.repository }}/tree/${{ github.ref_name }}
            Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            Workflow name: ${{ github.workflow }}
            Workflow file: https://github.com/${{ github.repository }}/tree/main/.github/workflows/scorecards-latest-release.yml
            Trigger: ${{ github.event_name }}
            Branch: ${{ github.ref_name }}
          repo: "ossf/scorecard-action"
          labels: |
            e2e
            automated-tests
